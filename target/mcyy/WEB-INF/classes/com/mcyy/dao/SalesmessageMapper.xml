<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mcyy.dao.mapper.SalesmessageMapper">
    <resultMap id="BaseResultMap" type="com.mcyy.entity.Salesmessage">
        <id column="sm_id" jdbcType="INTEGER" property="smId"/>
        <result column="sm_medicineid" jdbcType="INTEGER" property="smMedicineid"/>
        <result column="sm_userid" jdbcType="INTEGER" property="smUserid"/>
        <result column="sm_data" jdbcType="TIMESTAMP" property="smData"/>
        <result column="sm_inventory" jdbcType="INTEGER" property="smInventory"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    sm_id, sm_medicineid, sm_userid, sm_data, sm_inventory
  </sql>
    <select id="selectByExample" parameterType="com.mcyy.entity.SalesmessageExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from salesmessage
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from salesmessage
        where sm_id = #{smId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from salesmessage
    where sm_id = #{smId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.mcyy.entity.SalesmessageExample">
        delete from salesmessage
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.mcyy.entity.Salesmessage">
    insert into salesmessage (sm_id, sm_medicineid, sm_userid, 
      sm_data, sm_inventory)
    values (#{smId,jdbcType=INTEGER}, #{smMedicineid,jdbcType=INTEGER}, #{smUserid,jdbcType=INTEGER}, 
      #{smData,jdbcType=TIMESTAMP}, #{smInventory,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.mcyy.entity.Salesmessage">
        insert into salesmessage
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="smId != null">
                sm_id,
            </if>
            <if test="smMedicineid != null">
                sm_medicineid,
            </if>
            <if test="smUserid != null">
                sm_userid,
            </if>
            <if test="smData != null">
                sm_data,
            </if>
            <if test="smInventory != null">
                sm_inventory,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="smId != null">
                #{smId,jdbcType=INTEGER},
            </if>
            <if test="smMedicineid != null">
                #{smMedicineid,jdbcType=INTEGER},
            </if>
            <if test="smUserid != null">
                #{smUserid,jdbcType=INTEGER},
            </if>
            <if test="smData != null">
                #{smData,jdbcType=TIMESTAMP},
            </if>
            <if test="smInventory != null">
                #{smInventory,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.mcyy.entity.SalesmessageExample" resultType="java.lang.Long">
        select count(*) from salesmessage
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update salesmessage
        <set>
            <if test="record.smId != null">
                sm_id = #{record.smId,jdbcType=INTEGER},
            </if>
            <if test="record.smMedicineid != null">
                sm_medicineid = #{record.smMedicineid,jdbcType=INTEGER},
            </if>
            <if test="record.smUserid != null">
                sm_userid = #{record.smUserid,jdbcType=INTEGER},
            </if>
            <if test="record.smData != null">
                sm_data = #{record.smData,jdbcType=TIMESTAMP},
            </if>
            <if test="record.smInventory != null">
                sm_inventory = #{record.smInventory,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update salesmessage
        set sm_id = #{record.smId,jdbcType=INTEGER},
        sm_medicineid = #{record.smMedicineid,jdbcType=INTEGER},
        sm_userid = #{record.smUserid,jdbcType=INTEGER},
        sm_data = #{record.smData,jdbcType=TIMESTAMP},
        sm_inventory = #{record.smInventory,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.mcyy.entity.Salesmessage">
        update salesmessage
        <set>
            <if test="smMedicineid != null">
                sm_medicineid = #{smMedicineid,jdbcType=INTEGER},
            </if>
            <if test="smUserid != null">
                sm_userid = #{smUserid,jdbcType=INTEGER},
            </if>
            <if test="smData != null">
                sm_data = #{smData,jdbcType=TIMESTAMP},
            </if>
            <if test="smInventory != null">
                sm_inventory = #{smInventory,jdbcType=INTEGER},
            </if>
        </set>
        where sm_id = #{smId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.mcyy.entity.Salesmessage">
    update salesmessage
    set sm_medicineid = #{smMedicineid,jdbcType=INTEGER},
      sm_userid = #{smUserid,jdbcType=INTEGER},
      sm_data = #{smData,jdbcType=TIMESTAMP},
      sm_inventory = #{smInventory,jdbcType=INTEGER}
    where sm_id = #{smId,jdbcType=INTEGER}
  </update>

    <!--按日期分组，统计当天销售额，Mybatis查询之返回特定的字段-->
    <select id="SumByDay" resultType="map">
     SELECT DATE_FORMAT(sm_data,'%Y-%m-%d') name , SUM(sm_inventory) value FROM salesmessage GROUP BY DATE_FORMAT(sm_data,'%Y-%m-%d');
  </select>

    <!--早晨时段销量-->
    <select id="MorningSell" resultType="java.lang.Integer" parameterType="java.lang.String">
    select sum(sm_inventory) sell
    from `salesmessage`
    where sm_data BETWEEN CONCAT(#{morning},' ','00:00:00') and CONCAT(#{morning},' ','12:00:00')
    </select>
    <!--中午时段销量-->
    <select id="NoonSell" resultType="java.lang.Integer" parameterType="java.lang.String">
    select sum(sm_inventory) sell
    from `salesmessage`
    where sm_data BETWEEN CONCAT(#{noon},' ','12:00:01') and CONCAT(#{noon},' ','17:00:00')
    </select>
    <!--下午时段销量-->
    <select id="AfternoonSell" resultType="java.lang.Integer" parameterType="java.lang.String">
    select sum(sm_inventory) sell
    from `salesmessage`
    where sm_data BETWEEN CONCAT(#{afternoon},' ','17:00:01') and CONCAT(#{afternoon},' ','23:59:59')
    </select>
    <!--查询数据库时间-->
    <select id="SelectSaleTime" resultType="java.lang.String">
        select DISTINCT DATE_FORMAT(sm_data,'%Y-%m-%d')  FROM salesmessage
    </select>
</mapper>